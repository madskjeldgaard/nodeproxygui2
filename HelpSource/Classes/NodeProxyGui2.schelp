TITLE:: NodeProxyGui2
SUMMARY:: Providing a modern alternative to the NodeProxy GUI
CATEGORIES:: JITLib>GUI
RELATED:: Classes/NdefGui, Classes/NdefParamGui, Classes/NodeProxy


DESCRIPTION::

NodeProxyGui2 is a modernized alternative to the classic NodeProxy / Ndef GUI
available in SuperCollider. It fixes a number of problems with the old GUI,
improves some things and adds a few handy new features to its set.

The main motivation behind it is to create a GUI that is:

LIST::
## Readable (labels have a readable font size on modern displays and do not get
EMPHASIS::cut off:: if overflowing because of long names)
## Has a tight integration with local and global LINK::Classes/ControlSpec::s,
and if no spec is found for a parameter, it has a reasonable fallback (assuming
it is a parameter with the range 0.0 to 1.0)
## Has user scaleable layout â€“ GUI elements resize with window size.
::


CLASSMETHODS::

METHOD:: new

ARGUMENT:: nodeproxy
An LINK::Classes/NodeProxy:: instance.

ARGUMENT:: limitUpdateRate
The higher this value, the slower the interface will update. In seconds. Default is CODE::0:: which mean instant updates.

ARGUMENT:: show
If CODE::false::, don't display the window immediately, so that it can be
embedded in other GUIs. Default is CODE::true::.

ARGUMENT:: collapseArrays
When CODE::true::, arrays of parameters will be shown as single line LINK::Classes/TextField::s. The default (CODE::false::) will show arrays of parameters as separate silders.

DISCUSSION::
A non-zero limitUpdateRate will reduce the CPU cost of updating GUI elements. If there are many parameters continuously updated - say from a bunch of noisy sensor readings, a reasonable limit is CODE::0.1::. That will force the GUI elements to only redraw ten times per second. CODE::0.1:: is also what the standard LINK::Classes/NdefGui:: uses internally. The limitUpdateRate can also be specified as an argument to the LINK::Classes/NodeProxy#-gui2:: method.

METHOD:: defaultExcludeParams
Parameters to be excluded. No GUI widgets will be created for these parameters. Expects an LINK::Classes/Array:: of symbols or strings. Wildcards (*) and Perl Regular Expression Syntax .[{}()\*+?|^$ are supported.

METHOD:: defaultIgnoreParams
Parameters to be ignored when calling LINK::#-randomize::, LINK::#-vary:: or LINK::#-defaults::. Expects an LINK::Classes/Array:: of symbols or strings. Wildcards (*) and Perl Regular Expression Syntax .[{}()\*+?|^$ are supported.

CODE::
NodeProxyGui2.defaultIgnoreParams = ["freq*", "^[Ff]eedback.*", "*[Gg]ain\\b" \pan];
::


INSTANCEMETHODS::

PRIVATE:: init, initFonts, makeInfoSection, makeTransportSection, makeParameterSection, makeParameterViews, nodeProxyChanged, parameterChanged, setUpDependencies, filteredParams, filteredParamsDo, paramPresentInArray

METHOD:: nodeProxy
Access the LINK::Classes/NodeProxy:: / LINK::Classes/Ndef:: belonging to this GUI.

METHOD:: ndef
Alias for LINK::#-nodeProxy::

METHOD:: excludeParams
Get or set the parameters to be excluded. No GUI widgets will be created for these parameters. Expects an LINK::Classes/Array:: of symbols or strings. Wildcards (*) are supported.

METHOD:: ignoreParams
Get or set the parameters to be ignored when calling LINK::#-randomize::, LINK::#-vary:: or LINK::#-defaults:: on this instance. Expects an LINK::Classes/Array:: of symbols or strings. Wildcards (*) are supported.

METHOD:: randomize
Set parameters to random values.
NOTE::Parameters listed in either LINK::#-ignoreParams:: or in LINK::#*defaultIgnoreParams:: will be excluded.::

ARGUMENT:: randmin
A normalized LINK::Classes/Float::.

ARGUMENT:: randmax
A normalized LINK::Classes/Float::.

METHOD:: vary
Set parameters to nearby random values - gaussian distribution.
NOTE::Parameters listed in either LINK::#-ignoreParams:: or in LINK::#*defaultIgnoreParams:: will be excluded.::

ARGUMENT:: deviation
A normalized LINK::Classes/Float::.

METHOD:: defaults
Set parameters to LINK::Classes/ControlSpec:: default values. Specs are first looked up in the node proxy's spec, and then in CODE::Spec.specs::.
NOTE::Parameters listed in either LINK::#-ignoreParams:: or in LINK::#*defaultIgnoreParams:: will be excluded.::

METHOD:: close
Closes the window.

METHOD:: window
Get the LINK::Classes/Window:: instance.

METHOD:: asCode
The node with its current settings represented as code. This can be useful for presets / snapshots.

NOTE::
LINK::#-ignoreParams:: are included while LINK::#-excludeParams:: not.
::

ARGUMENT:: includeMonitor
A LINK::Classes/Boolean:: value that specifies whether or not a .play line should be included (assuming the node is playing).

ARGUMENT:: envir
An optional LINK::Classes/Environment:: like a LINK::Classes/ProxySpace::.

RETURNS:: A LINK::Classes/String:: containing code that recreates the node and its current settings.

METHOD:: document
Creates a new document with code (using LINK::#-asCode::) that recreates this node with its current settings.

ARGUMENT:: includeMonitor
A LINK::Classes/Boolean:: value that specifies whether or not a .play line should be included (assuming the node is playing).

EXAMPLES::

CODE::
(
Ndef(\yiyi, {|freq=300, amp=0.5, pan=0|
	Pan2.ar(SinOsc.ar(freq), pos: pan, level: amp)
});
)

// .gui2 returns the GUI, allowing you to further manipulate it later on, or simply close it
g = Ndef(\yiyi).gui2;

g.randomize;

// don't randomize excluded parameters
g.ignoreParams = [\amp];
g.randomize;

// Close the GUI
g.close();

// With show = false, the GUI is embeddable in larger views
(
var win = Window("two guis in the same window");
Ndef(\yoyo, {|freq=300, amp=0.5, pan=0|
	Pan2.ar(VarSaw.ar(freq), pos: pan, level: amp)
});
win.view.layout = HLayout(
	NodeProxyGui2(Ndef(\yiyi), show: false),
	NodeProxyGui2(Ndef(\yoyo), show: false)
);
win.front;
)

(
var win = Window("an ndef and something else");
var graphics = UserView().drawFunc_({ |v|
	{:Rect(x,y,20.rand,20.rand),
		x <- (0,20..v.bounds.width), y <- (0,20..v.bounds.height)
	}.do { |r|
		Pen.fillColor_(Color.rand).fillOval(r)
	}
});
win.view.layout = VLayout(
	[graphics, s: 2],
	NodeProxyGui2(Ndef(\yiyi), show: false)
);
win.front
)
::
